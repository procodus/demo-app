{{- if .Values.backend.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "demo-app.fullname" . }}-backend
  labels:
    {{- include "demo-app.backend.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.backend.enabled }}
  replicas: {{ .Values.backend.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "demo-app.backend.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ toJson .Values.backend.config | sha256sum }}
        {{- with .Values.backend.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "demo-app.backend.selectorLabels" . | nindent 8 }}
        {{- with .Values.backend.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.backend.podSecurityContext | nindent 8 }}
      containers:
      - name: backend
        image: {{ include "demo-app.backend.image" . }}
        imagePullPolicy: {{ .Values.backend.image.pullPolicy | default .Values.global.imagePullPolicy }}
        command:
          - /app/demo-app
          - backend
        env:
        - name: RABBITMQ_URL
          value: {{ include "demo-app.rabbitmq.url" . | quote }}
        - name: SENSOR_QUEUE
          value: {{ .Values.rabbitmq.sensorQueue | quote }}
        - name: DEVICE_QUEUE
          value: {{ .Values.rabbitmq.deviceQueue | quote }}
        - name: DB_HOST
          value: {{ .Values.postgresql.host | quote }}
        - name: DB_PORT
          value: {{ .Values.postgresql.port | quote }}
        - name: DB_USER
          value: {{ .Values.postgresql.user | quote }}
        - name: DB_PASSWORD
          value: {{ .Values.postgresql.password | quote }}
        - name: DB_NAME
          value: {{ .Values.postgresql.database | quote }}
        - name: DB_SSLMODE
          value: {{ .Values.postgresql.sslmode | quote }}
        - name: GRPC_PORT
          value: {{ .Values.backend.config.grpcPort | quote }}
        - name: LOG_LEVEL
          value: {{ .Values.backend.config.logLevel | quote }}
        {{- if .Values.metrics.enabled }}
        - name: METRICS_PORT
          value: {{ .Values.backend.metrics.port | quote }}
        {{- end }}
        ports:
        - name: grpc
          containerPort: {{ .Values.backend.config.grpcPort }}
          protocol: TCP
        {{- if .Values.metrics.enabled }}
        - name: {{ .Values.backend.metrics.portName }}
          containerPort: {{ .Values.backend.metrics.port }}
          protocol: TCP
        {{- end }}
        {{- if .Values.backend.livenessProbe.enabled }}
        livenessProbe:
          grpc:
            port: {{ .Values.backend.config.grpcPort }}
          initialDelaySeconds: {{ .Values.backend.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.backend.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.backend.livenessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.backend.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.backend.livenessProbe.failureThreshold }}
        {{- end }}
        {{- if .Values.backend.readinessProbe.enabled }}
        readinessProbe:
          grpc:
            port: {{ .Values.backend.config.grpcPort }}
          initialDelaySeconds: {{ .Values.backend.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.backend.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.backend.readinessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.backend.readinessProbe.successThreshold }}
          failureThreshold: {{ .Values.backend.readinessProbe.failureThreshold }}
        {{- end }}
        resources:
          {{- toYaml .Values.backend.resources | nindent 10 }}
        securityContext:
          {{- toYaml .Values.backend.securityContext | nindent 10 }}
        volumeMounts:
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: tmp
        emptyDir: {}
      {{- with .Values.backend.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.backend.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.backend.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
