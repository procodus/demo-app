{{- if .Values.frontend.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "demo-app.fullname" . }}-frontend
  labels:
    {{- include "demo-app.frontend.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.frontend.enabled }}
  replicas: {{ .Values.frontend.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "demo-app.frontend.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ toJson .Values.frontend.config | sha256sum }}
        {{- with .Values.frontend.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "demo-app.frontend.selectorLabels" . | nindent 8 }}
        {{- with .Values.frontend.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.frontend.podSecurityContext | nindent 8 }}
      containers:
      - name: frontend
        image: {{ include "demo-app.frontend.image" . }}
        imagePullPolicy: {{ .Values.frontend.image.pullPolicy | default .Values.global.imagePullPolicy }}
        command:
          - /app/demo-app
          - frontend
        env:
        - name: BACKEND_GRPC_ADDR
          value: "{{ include "demo-app.fullname" . }}-backend:{{ .Values.backend.service.grpcPort }}"
        - name: HTTP_PORT
          value: {{ .Values.frontend.config.httpPort | quote }}
        - name: LOG_LEVEL
          value: {{ .Values.frontend.config.logLevel | quote }}
        ports:
        - name: http
          containerPort: {{ .Values.frontend.config.httpPort }}
          protocol: TCP
        {{- if .Values.frontend.livenessProbe.enabled }}
        livenessProbe:
          httpGet:
            path: {{ .Values.frontend.livenessProbe.httpGet.path }}
            port: {{ .Values.frontend.livenessProbe.httpGet.port }}
          initialDelaySeconds: {{ .Values.frontend.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.frontend.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.frontend.livenessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.frontend.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.frontend.livenessProbe.failureThreshold }}
        {{- end }}
        {{- if .Values.frontend.readinessProbe.enabled }}
        readinessProbe:
          httpGet:
            path: {{ .Values.frontend.readinessProbe.httpGet.path }}
            port: {{ .Values.frontend.readinessProbe.httpGet.port }}
          initialDelaySeconds: {{ .Values.frontend.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.frontend.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.frontend.readinessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.frontend.readinessProbe.successThreshold }}
          failureThreshold: {{ .Values.frontend.readinessProbe.failureThreshold }}
        {{- end }}
        resources:
          {{- toYaml .Values.frontend.resources | nindent 10 }}
        securityContext:
          {{- toYaml .Values.frontend.securityContext | nindent 10 }}
        volumeMounts:
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: tmp
        emptyDir: {}
      {{- with .Values.frontend.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.frontend.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.frontend.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
